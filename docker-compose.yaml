services:
  nginx:
    restart: always
    image: trunkplayer/trunkplayer-ng-nginx:latest
    # build: nginx/
    # user: 1000:1000
    ports:
      - 8080:80
      - 8443:443
    depends_on:
      - gunicorn
    volumes:
      - static:/code/static
      - ${MEDIA_VOLUME_PATH}:/code/mediafiles

  emqx:
    image: emqx/emqx:latest
    ports:
      - "1883:1883"
      - "18083:18083"
    environment:
      - EMQX_LISTENER__TCP__EXTERNAL=1883
      - EMQX_LISTENER__WS__EXTERNAL=8083
      - EMQX_DASHBOARD__LISTENER__HTTP=18083
    restart: always


  trunk-player-frontend:
    restart: always
    image: trunkplayer/trunkplayer-ng-frontend:latest
    # build: ../Trunk-PlayerNG-Frontend/
    environment:
      NEXT_PUBLIC_BASEAPIURL: "${NEXT_PUBLIC_BASEAPIURL}"
      NEXT_PUBLIC_RECOMMENDEDBASEAPIURL: "${NEXT_PUBLIC_RECOMMENDEDBASEAPIURL}"

  gunicorn:
    restart: always
    image: trunkplayer/trunkplayer-ng-api:latest
    build: .
    user: 1000:1000
    command: 
      - /usr/bin/chaosctl
      - web
      #- --init
    env_file:
      - .env
    environment:
      DB_HOST: "database"
      CELERY_BROKER_URL: "amqp://${RABBITMQ_DEFAULT_USER}:${RABBITMQ_DEFAULT_PASS}@rabbitmq:5672"
    volumes:
      - static:/opt/chaos.corp/tpng/static
      - ${MEDIA_VOLUME_PATH}:/opt/chaos.corp/tpng/mediafiles
    depends_on:
      - database
      - rabbitmq

  trunk-player-worker:
    restart: always
    image: trunkplayer/trunkplayer-ng-api:latest
    build: .
    user: 1000:1000
    deploy:
      replicas: ${WORKER_REPLICAS}
    command: 
      - /usr/bin/chaosctl
      - worker
    env_file:
      - .env
    environment:
      DB_HOST: "database"
      CELERY_BROKER_URL: "amqp://${RABBITMQ_DEFAULT_USER}:${RABBITMQ_DEFAULT_PASS}@rabbitmq:5672"
    volumes:
      - static:/opt/chaos.corp/tpng/static
      - ${MEDIA_VOLUME_PATH}:/opt/chaos.corp/tpng/mediafiles
    depends_on:
      - database
      - rabbitmq

  trunk-player-beat:
    restart: always
    image: trunkplayer/trunkplayer-ng-api:latest
    build: .
    user: 1000:1000
    command: 
      - /usr/bin/chaosctl
      - beat
    env_file:
      - .env
    environment:
      DB_HOST: "database"
      CELERY_BROKER_URL: "amqp://${RABBITMQ_DEFAULT_USER}:${RABBITMQ_DEFAULT_PASS}@rabbitmq:5672"
    volumes:
      - static:/opt/chaos.corp/tpng/static
      - ${MEDIA_VOLUME_PATH}:/opt/chaos.corp/tpng/mediafiles
    depends_on:
      - database
      - rabbitmq

  trunk-player-mqtt:
    restart: always
    image: trunkplayer/trunkplayer-ng-api:latest
    build: .
    user: 1000:1000
    command: 
      - /usr/bin/chaosctl
      - mqtt
    env_file:
      - .env
    environment:
      DB_HOST: "database"
      CELERY_BROKER_URL: "amqp://${RABBITMQ_DEFAULT_USER}:${RABBITMQ_DEFAULT_PASS}@rabbitmq:5672"
    depends_on:
      - database
      - rabbitmq
      - emqx

  database:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_PASSWORD: "${DB_PASS}"
      POSTGRES_DB: "${DB_NAME}"
      POSTGRES_USER: "${DB_USER}"
    volumes:
      - ${DATABASE_VOLUME_PATH}:/var/lib/postgresql/data

  rabbitmq:
    image: 'rabbitmq:management'
    restart: always
    ports:
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
        
volumes:
  static: